version: 0.2

phases:
  pre_build:
    commands:
      - chmod +x ./gradlew
      - echo Running Gradle build...
      - ./gradlew clean build -x test
      - ./gradlew clean build

      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_URI=235763262026.dkr.ecr.us-east-1.amazonaws.com/palcos-images-repository
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --build-arg APP_VERSION=$IMAGE_TAG -t $REPOSITORY_URI:$IMAGE_TAG .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # This part is for CodeDeploy to know which container to update.
      - DOCKER_CONTAINER_NAME=palcos-images-repository
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    # The path to your JAR file needs to be updated for Gradle.
    - build/libs/articulosapi.jar